{"ast":null,"code":"import _objectSpread from \"/Users/benblum/Desktop/Code/protfolio/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/benblum/Desktop/Code/protfolio/src/ImageGallery/selectedImage.js\";\nimport React from \"react\";\n\nconst Checkmark = ({\n  selected\n}) => React.createElement(\"div\", {\n  style: selected ? {\n    left: \"4px\",\n    top: \"4px\",\n    position: \"absolute\",\n    zIndex: \"1\"\n  } : {\n    display: \"none\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4\n  },\n  __self: this\n}, React.createElement(\"svg\", {\n  style: {\n    fill: \"white\",\n    position: \"absolute\"\n  },\n  width: \"24px\",\n  height: \"24px\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(\"circle\", {\n  cx: \"12.5\",\n  cy: \"12.2\",\n  r: \"8.292\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n})), React.createElement(\"svg\", {\n  style: {\n    fill: \"#06befa\",\n    position: \"absolute\"\n  },\n  width: \"24px\",\n  height: \"24px\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n})));\n\nconst imgStyle = {\n  transition: \"transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s\"\n};\nconst selectedImgStyle = {\n  transform: \"translateZ(0px) scale3d(0.9, 0.9, 1)\",\n  transition: \"transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s\"\n};\nconst cont = {\n  backgroundColor: \"#eee\",\n  cursor: \"pointer\",\n  overflow: \"hidden\",\n  position: \"relative\"\n};\n\nconst SelectedImage = ({\n  index,\n  onClick,\n  photo,\n  margin,\n  direction,\n  top,\n  left\n}) => {\n  //calculate x,y scale\n  const sx = (100 - 30 / photo.width * 100) / 100;\n  const sy = (100 - 30 / photo.height * 100) / 100;\n  selectedImgStyle.transform = \"translateZ(0px) scale3d(\".concat(sx, \", \").concat(sy, \", 1)\");\n\n  if (direction === \"column\") {\n    cont.position = \"absolute\";\n    cont.left = left;\n    cont.top = top;\n  }\n\n  return React.createElement(\"div\", {\n    style: _objectSpread({\n      margin,\n      height: photo.height,\n      width: photo.width\n    }, cont),\n    className: !photo.selected ? \"not-selected\" : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Checkmark, {\n    selected: photo.selected ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"img\", Object.assign({\n    style: photo.selected ? _objectSpread({}, imgStyle, selectedImgStyle) : _objectSpread({}, imgStyle)\n  }, photo, {\n    onClick: e => onClick(e, {\n      index,\n      photo\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })));\n};\n\nexport default SelectedImage;","map":{"version":3,"sources":["/Users/benblum/Desktop/Code/protfolio/src/ImageGallery/selectedImage.js"],"names":["React","Checkmark","selected","left","top","position","zIndex","display","fill","imgStyle","transition","selectedImgStyle","transform","cont","backgroundColor","cursor","overflow","SelectedImage","index","onClick","photo","margin","direction","sx","width","sy","height","e"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nconst Checkmark = ({ selected }) => (\n  <div\n    style={\n      selected\n        ? { left: \"4px\", top: \"4px\", position: \"absolute\", zIndex: \"1\" }\n        : { display: \"none\" }\n    }\n  >\n    <svg\n      style={{ fill: \"white\", position: \"absolute\" }}\n      width=\"24px\"\n      height=\"24px\"\n    >\n      <circle cx=\"12.5\" cy=\"12.2\" r=\"8.292\" />\n    </svg>\n    <svg\n      style={{ fill: \"#06befa\", position: \"absolute\" }}\n      width=\"24px\"\n      height=\"24px\"\n    >\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\n    </svg>\n  </div>\n);\n\nconst imgStyle = {\n  transition: \"transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s\"\n};\nconst selectedImgStyle = {\n  transform: \"translateZ(0px) scale3d(0.9, 0.9, 1)\",\n  transition: \"transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s\"\n};\nconst cont = {\n  backgroundColor: \"#eee\",\n  cursor: \"pointer\",\n  overflow: \"hidden\",\n  position: \"relative\"\n};\n\nconst SelectedImage = ({\n  index,\n  onClick,\n  photo,\n  margin,\n  direction,\n  top,\n  left\n}) => {\n  //calculate x,y scale\n  const sx = (100 - (30 / photo.width) * 100) / 100;\n  const sy = (100 - (30 / photo.height) * 100) / 100;\n  selectedImgStyle.transform = `translateZ(0px) scale3d(${sx}, ${sy}, 1)`;\n\n  if (direction === \"column\") {\n    cont.position = \"absolute\";\n    cont.left = left;\n    cont.top = top;\n  }\n  return (\n    <div\n      style={{ margin, height: photo.height, width: photo.width, ...cont }}\n      className={!photo.selected ? \"not-selected\" : \"\"}\n    >\n      <Checkmark selected={photo.selected ? true : false} />\n      <img\n        style={\n          photo.selected\n            ? { ...imgStyle, ...selectedImgStyle }\n            : { ...imgStyle }\n        }\n        {...photo}\n        onClick={e => onClick(e, { index, photo })}\n      />\n    </div>\n  );\n};\n\nexport default SelectedImage;\n"]},"metadata":{},"sourceType":"module"}