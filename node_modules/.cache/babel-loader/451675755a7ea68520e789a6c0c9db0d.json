{"ast":null,"code":"\"use strict\";\n\nconst _require = require(\"../../utils\"),\n      mixin = _require.mixin;\n\nconst SVGNumber = require(\"../generated/SVGNumber\");\n\nconst SVGGraphicsElementImpl = require(\"./SVGGraphicsElement-impl\").implementation;\n\nconst WindowEventHandlersImpl = require(\"./WindowEventHandlers-impl\").implementation;\n\nconst _require2 = require(\"../helpers/internal-constants\"),\n      domSymbolTree = _require2.domSymbolTree;\n\nconst _require3 = require(\"../node-type\"),\n      ELEMENT_NODE = _require3.ELEMENT_NODE;\n\nclass SVGSVGElementImpl extends SVGGraphicsElementImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n\n    this._proxyWindowEventsToWindow();\n  }\n\n  createSVGNumber() {\n    return SVGNumber.createImpl([], {});\n  }\n\n  getElementById(elementId) {\n    // TODO: optimize with _ids caching trick; see Document class.\n    for (const node of domSymbolTree.treeIterator(this)) {\n      if (node.nodeType === ELEMENT_NODE && node.getAttribute(\"id\") === elementId) {\n        return node;\n      }\n    }\n\n    return null;\n  }\n\n  suspendRedraw() {\n    return 1;\n  }\n\n  unsuspendRedraw() {}\n\n  unsuspendRedrawAll() {}\n\n  forceRedraw() {}\n\n}\n\nmixin(SVGSVGElementImpl.prototype, WindowEventHandlersImpl.prototype);\nmodule.exports = {\n  implementation: SVGSVGElementImpl\n};","map":null,"metadata":{},"sourceType":"script"}