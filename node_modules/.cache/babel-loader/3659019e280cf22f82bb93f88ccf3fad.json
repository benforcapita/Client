{"ast":null,"code":"\"use strict\";\n\nconst DOMException = require(\"domexception\");\n\nclass SVGNumberImpl {\n  constructor(args, privateData) {\n    // Delegate to parent List object for (almost) everything related to reflection.\n    this._parentList = privateData.parentList;\n    this._value = 0;\n  }\n\n  get _readOnly() {\n    if (this._parentList !== undefined) {\n      return this._parentList._readOnly;\n    }\n\n    return false;\n  }\n\n  _synchronize() {\n    if (this._parentList !== undefined) {\n      this._parentList._synchronize();\n    }\n  }\n\n  _reserialize() {\n    if (this._parentList !== undefined) {\n      this._parentList._reserialize();\n    }\n  }\n\n  get value() {\n    this._synchronize();\n\n    return this._value;\n  }\n\n  set value(value) {\n    if (this._readOnly) {\n      throw new DOMException(\"Attempting to modify a read-only SVGNumber\", \"NoModificationAllowedError\");\n    }\n\n    this._value = value;\n\n    this._reserialize();\n  }\n\n}\n\nexports.implementation = SVGNumberImpl;","map":null,"metadata":{},"sourceType":"script"}