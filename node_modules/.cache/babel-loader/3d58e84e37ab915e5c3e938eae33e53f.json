{"ast":null,"code":"var _jsxFileName = \"/Users/benblum/Desktop/Code/webApp/client/src/ImageParallax/ImageParallax.js\";\nimport React from \"react\";\nimport { Parallax } from \"react-parallax\";\nconst Style = {\n  color: \"white\",\n  fontFamily: \"Roboto, sans-serif,\",\n  textShadow: \"-1px 0 black, 0 1px black, 1px 0 black, 0 -1px black\",\n  fontSize: \"3em,\",\n  textAlign: \"center\",\n  height: \"50%\",\n  width: \"100%\",\n  position: \"absolute\",\n  bottom: \"0\"\n};\nexport class ImageParallax extends React.Component {\n  constructor(props) {\n    super(props);\n    this.title = React.createElement(\"div\", {\n      style: {\n        height: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: Style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.props.title));\n    this.state = {\n      text: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3001/title').then(response => response.json()).then(data => this.setState({\n      photos: data[\"media\"]\n    }));\n  }\n\n  render() {\n    return React.createElement(Parallax, {\n      bgImage: this.props.url,\n      blur: {\n        min: -1,\n        max: 3\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.title);\n  }\n\n}","map":{"version":3,"sources":["/Users/benblum/Desktop/Code/webApp/client/src/ImageParallax/ImageParallax.js"],"names":["React","Parallax","Style","color","fontFamily","textShadow","fontSize","textAlign","height","width","position","bottom","ImageParallax","Component","constructor","props","title","state","text","componentDidMount","fetch","then","response","json","data","setState","photos","render","url","min","max"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,MAAMC,KAAK,GAAG;AACVC,EAAAA,KAAK,EAAG,OADE;AAEVC,EAAAA,UAAU,EAAG,qBAFH;AAGVC,EAAAA,UAAU,EAAG,sDAHH;AAIVC,EAAAA,QAAQ,EAAE,MAJA;AAKVC,EAAAA,SAAS,EAAG,QALF;AAMVC,EAAAA,MAAM,EAAE,KANE;AAOVC,EAAAA,KAAK,EAAI,MAPC;AAQVC,EAAAA,QAAQ,EAAG,UARD;AASVC,EAAAA,MAAM,EAAE;AATE,CAAd;AAYE,OAAO,MAAMC,aAAN,SAA4BZ,KAAK,CAACa,SAAlC,CAA4C;AACjDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAalBC,KAbkB,GAcjB;AAAK,MAAA,KAAK,EAAE;AAAER,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,KAAK,EAAEN,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmB,KAAKa,KAAL,CAAWC,KAA9B,CADF,CAdiB;AAEf,SAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAC;AAAP,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI,KAAKC,QAAL,CAAc;AACxBC,MAAAA,MAAM,EAACF,IAAI,CAAC,OAAD;AADa,KAAd,CAFhB;AAKD;;AAQDG,EAAAA,MAAM,GAAG;AACL,WACA,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAKZ,KAAL,CAAWa,GAA9B;AAAmC,MAAA,IAAI,EAAE;AAAEC,QAAAA,GAAG,EAAE,CAAC,CAAR;AAAWC,QAAAA,GAAG,EAAE;AAAhB,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKd,KADR,CADA;AAIH;;AAzBgD","sourcesContent":["import React from \"react\";\nimport { Parallax } from \"react-parallax\";\n\nconst Style = {\n    color : \"white\",\n    fontFamily : \"Roboto, sans-serif,\",\n    textShadow : \"-1px 0 black, 0 1px black, 1px 0 black, 0 -1px black\",\n    fontSize: \"3em,\",\n    textAlign : \"center\",\n    height: \"50%\",\n    width :  \"100%\",\n    position : \"absolute\",\n    bottom: \"0\"\n};\n\n  export class ImageParallax extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { text:[] }\n    }\n\n    componentDidMount() {\n      fetch('http://localhost:3001/title')\n        .then(response => response.json())\n        .then(data => this.setState({ \n            photos:data[\"media\"]\n          }));\n    }\n\n     title = (\n      <div style={{ height: 500 }}>\n        <h1 style={Style}>{this.props.title}</h1>\n        </div> \n      )\n\n    render() { \n        return ( \n        <Parallax bgImage={this.props.url} blur={{ min: -1, max: 3 }} >\n          {this.title}\n          </Parallax> );\n    }\n  }\n\n"]},"metadata":{},"sourceType":"module"}