{"ast":null,"code":"\"use strict\";\n\nconst Event = require(\"../generated/Event.js\");\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nclass HTMLDetailsElementImpl extends HTMLElementImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n    this._taskQueue = null;\n  }\n\n  _dispatchToggleEvent() {\n    this._taskQueue = null;\n\n    this._dispatch(Event.createImpl([\"toggle\", {\n      bubbles: false,\n      cancelable: false\n    }], {\n      isTrusted: true\n    }));\n  }\n\n  _attrModified(name, value, oldValue) {\n    super._attrModified(name, value, oldValue);\n\n    if (name === \"open\" && this._taskQueue === null) {\n      // Check that the attribute is added or removed, not merely changed\n      if (value !== oldValue && value !== null && oldValue === null || value === null && oldValue !== null) {\n        this._taskQueue = setTimeout(this._dispatchToggleEvent.bind(this), 0);\n      }\n    }\n  }\n\n}\n\nmodule.exports = {\n  implementation: HTMLDetailsElementImpl\n};","map":null,"metadata":{},"sourceType":"script"}