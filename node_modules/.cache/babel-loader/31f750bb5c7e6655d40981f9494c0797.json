{"ast":null,"code":"\"use strict\";\n\nconst DOMException = require(\"domexception\");\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nconst HTMLCollection = require(\"../generated/HTMLCollection\");\n\nconst _require = require(\"../helpers/namespaces\"),\n      HTML_NS = _require.HTML_NS;\n\nconst _require2 = require(\"../helpers/traversal\"),\n      childrenByHTMLLocalNames = _require2.childrenByHTMLLocalNames;\n\nconst _require3 = require(\"../helpers/internal-constants\"),\n      domSymbolTree = _require3.domSymbolTree;\n\nconst cellLocalNames = new Set([\"td\", \"th\"]);\n\nclass HTMLTableRowElementImpl extends HTMLElementImpl {\n  get cells() {\n    if (!this._cells) {\n      this._cells = HTMLCollection.createImpl([], {\n        element: this,\n        query: () => childrenByHTMLLocalNames(this, cellLocalNames)\n      });\n    }\n\n    return this._cells;\n  }\n\n  get rowIndex() {\n    const parent = this.parentElement;\n\n    if (parent === null || parent.namespaceURI !== HTML_NS) {\n      return -1;\n    }\n\n    let tableElement = parent;\n\n    if (parent.localName === \"thead\" || parent.localName === \"tbody\" || parent.localName === \"tfoot\") {\n      tableElement = parent.parentElement;\n    }\n\n    if (tableElement === null || tableElement.namespaceURI !== HTML_NS || tableElement.localName !== \"table\") {\n      return -1;\n    }\n\n    return tableElement.rows.indexOf(this);\n  }\n\n  get sectionRowIndex() {\n    const parent = domSymbolTree.parent(this);\n\n    if (parent === null) {\n      return -1;\n    }\n\n    const rows = parent.rows;\n\n    if (!rows) {\n      return -1;\n    }\n\n    return rows.indexOf(this);\n  }\n\n  insertCell(index) {\n    const td = this._ownerDocument.createElement(\"TD\");\n\n    const cells = this.cells;\n\n    if (index < -1 || index > cells.length) {\n      throw new DOMException(\"The index is not in the allowed range.\", \"IndexSizeError\");\n    }\n\n    if (index === -1 || index === cells.length) {\n      this.appendChild(td);\n    } else {\n      const ref = cells.item(index);\n      this.insertBefore(td, ref);\n    }\n\n    return td;\n  }\n\n  deleteCell(index) {\n    const cells = this.cells;\n\n    if (index < -1 || index >= cells.length) {\n      throw new DOMException(\"The index is not in the allowed range.\", \"IndexSizeError\");\n    }\n\n    if (index === -1) {\n      if (cells.length === 0) {\n        return;\n      }\n\n      index = cells.length - 1;\n    }\n\n    const td = cells.item(index);\n    this.removeChild(td);\n  }\n\n}\n\nmodule.exports = {\n  implementation: HTMLTableRowElementImpl\n};","map":null,"metadata":{},"sourceType":"script"}