{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst EventInit = require(\"./EventInit.js\");\n\nmodule.exports = {\n  convertInherit(obj, ret, {\n    context = \"The provided value\"\n  } = {}) {\n    EventInit.convertInherit(obj, ret, {\n      context\n    });\n    {\n      const key = \"newURL\";\n      let value = obj === undefined || obj === null ? undefined : obj[key];\n\n      if (value !== undefined) {\n        value = conversions[\"USVString\"](value, {\n          context: context + \" has member newURL that\"\n        });\n        ret[key] = value;\n      } else {\n        ret[key] = \"\";\n      }\n    }\n    {\n      const key = \"oldURL\";\n      let value = obj === undefined || obj === null ? undefined : obj[key];\n\n      if (value !== undefined) {\n        value = conversions[\"USVString\"](value, {\n          context: context + \" has member oldURL that\"\n        });\n        ret[key] = value;\n      } else {\n        ret[key] = \"\";\n      }\n    }\n  },\n\n  convert(obj, {\n    context = \"The provided value\"\n  } = {}) {\n    if (obj !== undefined && typeof obj !== \"object\" && typeof obj !== \"function\") {\n      throw new TypeError(\"\".concat(context, \" is not an object.\"));\n    }\n\n    const ret = Object.create(null);\n    module.exports.convertInherit(obj, ret, {\n      context\n    });\n    return ret;\n  }\n\n};","map":null,"metadata":{},"sourceType":"script"}