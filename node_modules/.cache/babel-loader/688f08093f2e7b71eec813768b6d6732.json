{"ast":null,"code":"\"use strict\";\n\nconst attributes = require(\"../attributes.js\");\n\nexports.implementation = class AttrImpl {\n  constructor(_, privateData) {\n    this._namespace = privateData.namespace !== undefined ? privateData.namespace : null;\n    this._namespacePrefix = privateData.namespacePrefix !== undefined ? privateData.namespacePrefix : null;\n    this._localName = privateData.localName;\n    this._value = privateData.value !== undefined ? privateData.value : \"\";\n    this._element = privateData.element !== undefined ? privateData.element : null;\n    this.specified = true;\n  }\n\n  get namespaceURI() {\n    return this._namespace;\n  }\n\n  get prefix() {\n    return this._namespacePrefix;\n  }\n\n  get localName() {\n    return this._localName;\n  }\n\n  get name() {\n    return this._qualifiedName;\n  }\n\n  get nodeName() {\n    return this._qualifiedName;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(v) {\n    if (this._element === null) {\n      this._value = v;\n    } else {\n      attributes.changeAttribute(this._element, this, v);\n    }\n  } // Delegate to value\n\n\n  get nodeValue() {\n    return this.value;\n  }\n\n  set nodeValue(v) {\n    this.value = v;\n  } // Delegate to value\n\n\n  get textContent() {\n    return this.value;\n  }\n\n  set textContent(v) {\n    this.value = v;\n  }\n\n  get ownerElement() {\n    return this._element;\n  }\n\n  get _qualifiedName() {\n    // https://dom.spec.whatwg.org/#concept-attribute-qualified-name\n    if (this._namespacePrefix === null) {\n      return this._localName;\n    }\n\n    return this._namespacePrefix + \":\" + this._localName;\n  }\n\n};","map":null,"metadata":{},"sourceType":"script"}