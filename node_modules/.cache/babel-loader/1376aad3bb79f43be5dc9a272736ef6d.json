{"ast":null,"code":"\"use strict\";\n\nconst MIMEType = require(\"whatwg-mimetype\");\n\nconst _require = require(\"whatwg-url\"),\n      parseURL = _require.parseURL,\n      serializeURL = _require.serializeURL;\n\nconst _require2 = require(\"./utils.js\"),\n      stripLeadingAndTrailingASCIIWhitespace = _require2.stripLeadingAndTrailingASCIIWhitespace,\n      stringPercentDecode = _require2.stringPercentDecode,\n      isomorphicDecode = _require2.isomorphicDecode,\n      forgivingBase64Decode = _require2.forgivingBase64Decode;\n\nmodule.exports = stringInput => {\n  const urlRecord = parseURL(stringInput);\n\n  if (urlRecord === null) {\n    return null;\n  }\n\n  return module.exports.fromURLRecord(urlRecord);\n};\n\nmodule.exports.fromURLRecord = urlRecord => {\n  if (urlRecord.scheme !== \"data\") {\n    return null;\n  }\n\n  const input = serializeURL(urlRecord, true).substring(\"data:\".length);\n  let position = 0;\n  let mimeType = \"\";\n\n  while (position < input.length && input[position] !== \",\") {\n    mimeType += input[position];\n    ++position;\n  }\n\n  mimeType = stripLeadingAndTrailingASCIIWhitespace(mimeType);\n\n  if (position === input.length) {\n    return null;\n  }\n\n  ++position;\n  const encodedBody = input.substring(position);\n  let body = stringPercentDecode(encodedBody); // Can't use /i regexp flag because it isn't restricted to ASCII.\n\n  const mimeTypeBase64MatchResult = /(.*); *[Bb][Aa][Ss][Ee]64$/.exec(mimeType);\n\n  if (mimeTypeBase64MatchResult) {\n    const stringBody = isomorphicDecode(body);\n    body = forgivingBase64Decode(stringBody);\n\n    if (body === null) {\n      return null;\n    }\n\n    mimeType = mimeTypeBase64MatchResult[1];\n  }\n\n  if (mimeType.startsWith(\";\")) {\n    mimeType = \"text/plain\" + mimeType;\n  }\n\n  let mimeTypeRecord;\n\n  try {\n    mimeTypeRecord = new MIMEType(mimeType);\n  } catch (e) {\n    mimeTypeRecord = new MIMEType(\"text/plain;charset=US-ASCII\");\n  }\n\n  return {\n    mimeType: mimeTypeRecord,\n    body\n  };\n};","map":null,"metadata":{},"sourceType":"script"}