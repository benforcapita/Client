{"ast":null,"code":"\"use strict\";\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nconst _require = require(\"../helpers/stylesheets\"),\n      removeStylesheet = _require.removeStylesheet,\n      createStylesheet = _require.createStylesheet;\n\nconst _require2 = require(\"../helpers/document-base-url\"),\n      documentBaseURL = _require2.documentBaseURL;\n\nconst _require3 = require(\"../helpers/text\"),\n      childTextContent = _require3.childTextContent;\n\nconst _require4 = require(\"../helpers/strings\"),\n      asciiCaseInsensitiveMatch = _require4.asciiCaseInsensitiveMatch;\n\nclass HTMLStyleElementImpl extends HTMLElementImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n    this.sheet = null;\n    this._isOnStackOfOpenElements = false;\n  }\n\n  _attach() {\n    super._attach();\n\n    if (!this._isOnStackOfOpenElements) {\n      this._updateAStyleBlock();\n    }\n  }\n\n  _detach() {\n    super._detach();\n\n    if (!this._isOnStackOfOpenElements) {\n      this._updateAStyleBlock();\n    }\n  }\n\n  _childTextContentChangeSteps() {\n    super._childTextContentChangeSteps(); // This guard is not required by the spec, but should be unobservable (since you can't run script during the middle\n    // of parsing a <style> element) and saves a bunch of unnecessary work.\n\n\n    if (!this._isOnStackOfOpenElements) {\n      this._updateAStyleBlock();\n    }\n  }\n\n  _poppedOffStackOfOpenElements() {\n    this._isOnStackOfOpenElements = false;\n\n    this._updateAStyleBlock();\n  }\n\n  _pushedOnStackOfOpenElements() {\n    this._isOnStackOfOpenElements = true;\n  }\n\n  _updateAStyleBlock() {\n    if (this.sheet) {\n      removeStylesheet(this.sheet, this);\n    }\n\n    if (!this._attached) {\n      return;\n    }\n\n    const type = this.getAttribute(\"type\");\n\n    if (type !== null && type !== \"\" && !asciiCaseInsensitiveMatch(type, \"text/css\")) {\n      return;\n    } // Not implemented: CSP\n\n\n    const content = childTextContent(this); // Not implemented: a bunch of other state, e.g. title/media attributes\n\n    createStylesheet(content, this, documentBaseURL(this._ownerDocument));\n  }\n\n}\n\nmodule.exports = {\n  implementation: HTMLStyleElementImpl\n};","map":null,"metadata":{},"sourceType":"script"}