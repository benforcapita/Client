{"ast":null,"code":"\"use strict\";\n\nconst ValidityState = require(\"../generated/ValidityState\");\n\nconst Event = require(\"../generated/Event\");\n\nconst _require = require(\"../helpers/form-controls\"),\n      isDisabled = _require.isDisabled;\n\nconst _require2 = require(\"../helpers/traversal\"),\n      closest = _require2.closest;\n\nexports.implementation = class DefaultConstraintValidationImpl {\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-willvalidate\n  get willValidate() {\n    return this._isCandidateForConstraintValidation();\n  }\n\n  get validity() {\n    if (!this._validity) {\n      this._validity = ValidityState.createImpl(this);\n    }\n\n    return this._validity;\n  } // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-checkvalidity\n\n\n  checkValidity() {\n    if (!this._isCandidateForConstraintValidation()) {\n      return true;\n    }\n\n    if (this._satisfiesConstraints()) {\n      return true;\n    }\n\n    this.dispatchEvent(Event.createImpl([\"invalid\", {\n      cancelable: true\n    }]));\n    return false;\n  } // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-setcustomvalidity\n\n\n  setCustomValidity(message) {\n    this._customValidityErrorMessage = message;\n  } // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-reportvalidity\n  // Since jsdom has no user interaction, it's the same as #checkValidity\n\n\n  reportValidity() {\n    return this.checkValidity();\n  } // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-validationmessage\n\n\n  get validationMessage() {\n    const validity = this.validity;\n\n    if (!this._isCandidateForConstraintValidation() || this._satisfiesConstraints()) {\n      return \"\";\n    }\n\n    const isSufferingFromCustomError = validity.customError;\n\n    if (isSufferingFromCustomError) {\n      return this._customValidityErrorMessage;\n    }\n\n    return \"Constraints not satisfied\";\n  }\n\n  _isCandidateForConstraintValidation() {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-disabled\n    return !isDisabled(this) && // If an element has a datalist element ancestor,\n    // it is barred from constraint validation.\n    closest(this, \"datalist\") === null && !this._barredFromConstraintValidationSpecialization();\n  }\n\n  _isBarredFromConstraintValidation() {\n    return !this._isCandidateForConstraintValidation();\n  }\n\n  _satisfiesConstraints() {\n    return this.validity.valid;\n  }\n\n};","map":null,"metadata":{},"sourceType":"script"}